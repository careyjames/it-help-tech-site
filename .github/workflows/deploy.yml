name: Deploy static site â†’ S3 + CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      BUCKET: www.it-help.tech  # <--- CHANGED for your new S3 bucket
      DIST_ID: ${{ secrets.CF_DIST_ID_IT_HELP_TECH }} # <--- CHANGED to use the new secret name

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm install

      - name: Install Zola
        uses: taiki-e/install-action@cd39cb0572834c149bf3533a143f05e09def0f3c # v2.62.2
        with:
          tool: zola

      - name: Build site with Zola
        run: zola build

      - name: Purge unused CSS
        run: |
          npx purgecss --css public/css/*.css --content public/**/*.html --output public/css/ --safelist "phone-line"
          
      - name: Copy static assets
        run: ./scripts/copy-assets.sh


      - name: Upload immutable assets
        run: |
          aws s3 sync public/ s3://$BUCKET/ \
            --exclude "*.html" --exclude "llms*.txt" \
            --cache-control "public,max-age=31536000,immutable" \
            --metadata-directive REPLACE \
            --exact-timestamps \
            --delete
        env:
          AWS_S3_BUCKET: ${{ env.BUCKET }}
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload HTML (short TTL)
        run: |
          aws s3 sync public/ s3://$BUCKET/ \
            --include "*.html" --exclude "llms*.txt" \
            --cache-control "public,max-age=300" \
            --metadata-directive REPLACE \
            --exact-timestamps
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Set UTF-8 header for LLMS files
        run: |
          for f in static/llms*.txt; do
            aws s3 cp "$f" "s3://$BUCKET/$(basename "$f")" \
              --content-type "text/plain; charset=utf-8" \
              --cache-control "public,max-age=31536000,immutable" \
              --metadata-directive REPLACE
          done

        env:
          AWS_S3_BUCKET: ${{ env.BUCKET }}
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront cache and wait
        run: |
          INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id $DIST_ID --paths '/*' --query 'Invalidation.Id' --output text)
          echo "Waiting for CloudFront invalidation $INVALIDATION_ID to complete..."
          aws cloudfront wait invalidation-completed --distribution-id $DIST_ID --id "$INVALIDATION_ID"
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
