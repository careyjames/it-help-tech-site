name: Lighthouse Performance Testing

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lighthouse-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm install

      - name: Install Zola
        uses: taiki-e/install-action@cargo-binstall
        with:
          tool: zola

      - name: Build site with Zola
        run: |
          zola build
          if [ ! -d "public" ]; then
            echo "❌ Build failed - public directory not created"
            exit 1
          fi

      - name: Purge unused CSS
        run: |
          npx purgecss --css public/css/*.css --content public/**/*.html --output public/css/ --safelist "phone-line"

      - name: Copy static assets
        run: ./scripts/copy-assets.sh

      - name: Run Lighthouse Performance Tests
        id: lighthouse
        run: |
          echo "🚀 Running Lighthouse performance tests..."
          if npm run lighthouse; then
            echo "✅ Performance tests passed"
            echo "LIGHTHOUSE_STATUS=passed" >> $GITHUB_OUTPUT
          else
            echo "❌ Performance tests failed - PR blocked"
            echo "LIGHTHOUSE_STATUS=failed" >> $GITHUB_OUTPUT
            exit 1
          fi
        env:
          LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.event.pull_request.head.sha }}
          LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.pull_request.updated_at }}

      - name: Generate Lighthouse Performance Summary
        if: always()
        id: lighthouse-summary
        run: |
          echo "## 🚀 Lighthouse Performance Results" > lighthouse-summary.md
          echo "" >> lighthouse-summary.md

          if [ "${{ steps.lighthouse.outcome }}" = "success" ]; then
            echo "✅ **All performance gates passed!**" >> lighthouse-summary.md
            echo "" >> lighthouse-summary.md
            echo "Your changes meet performance standards:" >> lighthouse-summary.md
          else
            echo "❌ **Performance requirements not met**" >> lighthouse-summary.md
            echo "" >> lighthouse-summary.md
            echo "Some performance thresholds were not reached. Please review the detailed reports." >> lighthouse-summary.md
            echo "" >> lighthouse-summary.md
          fi

          # Add performance thresholds information
          echo "**Performance Requirements:**" >> lighthouse-summary.md
          echo "- **Performance**: ≥90" >> lighthouse-summary.md
          echo "- **Accessibility**: ≥90" >> lighthouse-summary.md
          echo "- **Best Practices**: ≥95" >> lighthouse-summary.md
          echo "- **SEO**: ≥95" >> lighthouse-summary.md
          echo "- **LCP**: <2.5s" >> lighthouse-summary.md
          echo "- **FCP**: <1.2s" >> lighthouse-summary.md
          echo "- **CLS**: <0.1" >> lighthouse-summary.md
          echo "- **TBT**: <300ms" >> lighthouse-summary.md
          echo "" >> lighthouse-summary.md

          # Add lighthouse reports links if available
          if [ -d ".lighthouseci" ]; then
            echo "📋 **Detailed Lighthouse reports**: Check workflow artifacts for \`.lighthouseci/\`" >> lighthouse-summary.md
            echo "LIGHTHOUSE_RESULTS_FOUND=true" >> $GITHUB_OUTPUT
          else
            echo "LIGHTHOUSE_RESULTS_FOUND=false" >> $GITHUB_OUTPUT
          fi

          echo "" >> lighthouse-summary.md
          echo "**Pages tested:** Homepage, Services, Billing, About, Blog" >> lighthouse-summary.md
          echo "" >> lighthouse-summary.md
          echo "💡 **Tips for improvement:**" >> lighthouse-summary.md
          echo "- Run \`npm run lighthouse\` locally to test before pushing" >> lighthouse-summary.md
          echo "- Check the [Web Vitals](https://web.dev/vitals/) guide for optimization tips" >> lighthouse-summary.md
          echo "- Use Chrome DevTools Lighthouse panel for real-time testing" >> lighthouse-summary.md

      - name: Comment PR with Lighthouse Results
        if: always() && steps.lighthouse-summary.outputs.LIGHTHOUSE_RESULTS_FOUND == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const summary = fs.readFileSync('lighthouse-summary.md', 'utf8');

              // Find existing lighthouse comment
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });

              const existingComment = comments.find(comment =>
                comment.body.includes('🚀 Lighthouse Performance Results')
              );

              if (existingComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: summary
                });
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: summary
                });
              }
            } catch (error) {
              console.log('Could not post lighthouse comment:', error);
            }

      - name: Upload Lighthouse Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            .lighthouseci/
            lighthouse-summary.md
          retention-days: 30

