name: Security Testing

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm install

      - name: Install Zola
        uses: taiki-e/install-action@cargo-binstall
        with:
          tool: zola

      - name: Build site with Zola
        run: |
          zola build
          if [ ! -d "public" ]; then
            echo "❌ Build failed - public directory not created"
            exit 1
          fi

      - name: Purge unused CSS
        run: |
          npx purgecss --css public/css/*.css --content public/**/*.html --output public/css/ --safelist "phone-line"

      - name: Copy static assets
        run: ./scripts/copy-assets.sh

      - name: Run Security Tests
        id: security
        run: |
          echo "🔒 Running comprehensive security tests..."
          if npm run security; then
            echo "✅ Security tests passed"
            echo "SECURITY_PASSED=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Security tests found issues"
            echo "SECURITY_PASSED=false" >> $GITHUB_OUTPUT
            # Don't exit here - we want to generate reports even with issues
          fi

      - name: Generate Security Summary
        if: always()
        id: security-summary
        run: |
          # Start building the security report
          echo "## 🔒 Security Test Results" > security-summary.md
          echo "" >> security-summary.md

          # Add security results section
          if [ -f ".security-results/summary.md" ]; then
            if [ "${{ steps.security.outputs.SECURITY_PASSED }}" = "true" ]; then
              echo "✅ **All security tests passed!**" >> security-summary.md
              echo "" >> security-summary.md
              echo "Your changes meet security standards:" >> security-summary.md
              echo "- **Security Headers**: Properly configured ✅" >> security-summary.md
              echo "- **OWASP ZAP Baseline**: No baseline security issues ✅" >> security-summary.md
              echo "- **Mozilla Observatory**: Strong security practices ✅" >> security-summary.md
            else
              echo "⚠️ **Security tests found issues**" >> security-summary.md
              echo "" >> security-summary.md
              echo "Some security requirements were not met. Please review the detailed reports." >> security-summary.md
              echo "" >> security-summary.md
              echo "**Security Testing Tools:**" >> security-summary.md
              echo "- **OWASP ZAP**: Industry-standard security scanning" >> security-summary.md
              echo "- **Mozilla Observatory**: Web security best practices" >> security-summary.md
            fi

            echo "" >> security-summary.md
            echo "**Pages tested:**" >> security-summary.md
            echo "- Homepage, Services, Billing, About, Blog" >> security-summary.md
            echo "" >> security-summary.md
            echo "📋 **Detailed security report**: Check workflow artifacts for \`.security-results/\`" >> security-summary.md
            echo "" >> security-summary.md
            echo "💡 **Tips for improvement:**" >> security-summary.md
            echo "- Run \`npm run security\` locally to test before pushing" >> security-summary.md
            echo "- Use online tools like [Security Headers](https://securityheaders.com/) for additional validation" >> security-summary.md
            echo "- Check the [OWASP Security Guidelines](https://owasp.org/www-project-web-security-testing-guide/) for best practices" >> security-summary.md
            echo "" >> security-summary.md
            echo "**Production Validation:**" >> security-summary.md
            echo "- [Mozilla Observatory](https://observatory.mozilla.org/)" >> security-summary.md
            echo "- [SSL Labs Test](https://www.ssllabs.com/ssltest/)" >> security-summary.md
            echo "- [Security Headers Scanner](https://securityheaders.com/)" >> security-summary.md

            echo "SECURITY_RESULTS_FOUND=true" >> $GITHUB_OUTPUT
          else
            echo "SECURITY_RESULTS_FOUND=false" >> $GITHUB_OUTPUT
            echo "❌ **Security test results not found**" >> security-summary.md
            echo "" >> security-summary.md
            echo "The security testing script may have encountered an error." >> security-summary.md
          fi

      - name: Comment PR with Security Results
        if: always() && steps.security-summary.outputs.SECURITY_RESULTS_FOUND == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const summary = fs.readFileSync('security-summary.md', 'utf8');

              // Find existing security comment
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });

              const existingComment = comments.find(comment =>
                comment.body.includes('🔒 Security Test Results')
              );

              if (existingComment) {
                // Update existing comment
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: summary
                });
              } else {
                // Create new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: summary
                });
              }
            } catch (error) {
              console.log('Could not post security comment:', error);
            }

      - name: Upload Security Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: .security-results/
          retention-days: 30